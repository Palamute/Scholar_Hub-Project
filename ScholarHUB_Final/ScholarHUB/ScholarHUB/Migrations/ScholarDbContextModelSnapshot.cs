// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScholarHUB.Services;

#nullable disable

namespace ScholarHUB.Migrations
{
    [DbContext(typeof(ScholarDbContext))]
    partial class ScholarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a55e2e87-e683-4ec2-af7d-4cab35264499",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "449064ce-ee65-4d0d-be2d-61b53c3bbfc0",
                            Name = "Student",
                            NormalizedName = "Student"
                        },
                        new
                        {
                            Id = "3bc43976-b36a-47c6-a7d3-02c3c8a0e7ca",
                            Name = "Manager",
                            NormalizedName = "Manager"
                        },
                        new
                        {
                            Id = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a",
                            Name = "Coordinator",
                            NormalizedName = "Coordinator"
                        },
                        new
                        {
                            Id = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80",
                            Name = "Guest",
                            NormalizedName = "Guest"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "165481d3-58ea-4af4-98b7-6b77fe9608d7",
                            RoleId = "a55e2e87-e683-4ec2-af7d-4cab35264499"
                        },
                        new
                        {
                            UserId = "6a17c08d-06dc-40ba-a528-00de67f0fdb3",
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80"
                        },
                        new
                        {
                            UserId = "2f350328-65fd-40ec-b890-ce4af066927f",
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80"
                        },
                        new
                        {
                            UserId = "9e90f00f-c69f-4a4d-a5bc-8aac1422f199",
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80"
                        },
                        new
                        {
                            UserId = "3cd74346-8add-4e66-8b17-69bc4a2e0d16",
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80"
                        },
                        new
                        {
                            UserId = "fab5ec6b-e9ef-4b3b-88bd-5083613ce9bd",
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80"
                        },
                        new
                        {
                            UserId = "caa72819-738e-4c1b-a03a-81687c2eb101",
                            RoleId = "3bc43976-b36a-47c6-a7d3-02c3c8a0e7ca"
                        },
                        new
                        {
                            UserId = "ab45742a-b3e6-422a-a3c3-16fb834b83b6",
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a"
                        },
                        new
                        {
                            UserId = "8097b232-4528-420d-9b9f-bd1b003f7510",
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a"
                        },
                        new
                        {
                            UserId = "efc7aa07-ee29-49c2-b61b-2dbda36768d4",
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a"
                        },
                        new
                        {
                            UserId = "ccf5d783-983a-48dc-9c9a-2f5978fcccd7",
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a"
                        },
                        new
                        {
                            UserId = "2fe187a1-f52c-4c43-9c51-68ded879dd37",
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ScholarHUB.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Select")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("ScholarHUB.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatePosted")
                        .HasColumnType("datetime2");

                    b.HasKey("CommentId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("ScholarHUB.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculty");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            FacultyName = "Information Technology"
                        },
                        new
                        {
                            FacultyId = 2,
                            FacultyName = "Graphic Design"
                        },
                        new
                        {
                            FacultyId = 3,
                            FacultyName = "Marketing"
                        },
                        new
                        {
                            FacultyId = 4,
                            FacultyName = "Law"
                        },
                        new
                        {
                            FacultyId = 5,
                            FacultyName = "Business"
                        });
                });

            modelBuilder.Entity("ScholarHUB.Models.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcademicYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "165481d3-58ea-4af4-98b7-6b77fe9608d7",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1dd9b018-da1d-457c-a899-22c4e697657c",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEIRi1QH8RvfUrEfdX0i4lLz9oqTz2xL50m7DIr3fAo+/V4O8x1Hb6wcbd5juUy6Ow==",
                            PhoneNumberConfirmed = false,
                            RoleId = "a55e2e87-e683-4ec2-af7d-4cab35264499",
                            RoleName = "Admin",
                            SecurityStamp = "a4a5ffe1-3e4c-4720-8353-280f4870d90b",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "6a17c08d-06dc-40ba-a528-00de67f0fdb3",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c7652033-7d3c-4a52-8f1b-3a1c8ed4d8d0",
                            Email = "guestit@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Information Technology",
                            FirstName = "Guest",
                            LastName = "IT",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUESTIT@GMAIL.COM",
                            NormalizedUserName = "GUESTIT@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ6/GqsEdPiiR5I4EXRYnFPU2V0K+hcuD+FHVuoHOQBc0ooDYDoqlcJTimb123LQWQ==",
                            PhoneNumberConfirmed = false,
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80",
                            RoleName = "Guest",
                            SecurityStamp = "d95c047f-4220-44c6-a46f-00719b9e0530",
                            TwoFactorEnabled = false,
                            UserName = "guestit@gmail.com"
                        },
                        new
                        {
                            Id = "2f350328-65fd-40ec-b890-ce4af066927f",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "882ac072-864c-46be-bb88-5ed60e2f2873",
                            Email = "guestmarketing@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Marketing",
                            FirstName = "Guest",
                            LastName = "Marketing",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUESTMARKETING@GMAIL.COM",
                            NormalizedUserName = "GUESTMARKETING@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJcJSSlQA3IFZKz+ABsb76cU3aLxDIMJ7WXSg02KhGgxW4uIU7VfUnPSVroFq5rtAQ==",
                            PhoneNumberConfirmed = false,
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80",
                            RoleName = "Guest",
                            SecurityStamp = "c0921b49-0cc4-4b6d-8e08-2b7707784a80",
                            TwoFactorEnabled = false,
                            UserName = "guestmarketing@gmail.com"
                        },
                        new
                        {
                            Id = "9e90f00f-c69f-4a4d-a5bc-8aac1422f199",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ecaf9056-42f7-45fb-af7a-ea5eb28392ee",
                            Email = "guestgraphic@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Graphic Design",
                            FirstName = "Guest",
                            LastName = "Graphic",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUESTGRAPHIC@GMAIL.COM",
                            NormalizedUserName = "GUESTGRAPHIC@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEInNrCyCRsZJYA9ae61pnUXtTY+CahQXXGMg/sde/7Azs+jMVRwmFUW2VE7jAsCyyg==",
                            PhoneNumberConfirmed = false,
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80",
                            RoleName = "Guest",
                            SecurityStamp = "f9b191fb-daa4-41e9-8221-070b8e922f49",
                            TwoFactorEnabled = false,
                            UserName = "guestgraphic@gmail.com"
                        },
                        new
                        {
                            Id = "3cd74346-8add-4e66-8b17-69bc4a2e0d16",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "166fbddf-eaa4-4f64-9790-b762fd8960b4",
                            Email = "guestlaw@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Law",
                            FirstName = "Guest",
                            LastName = "Law",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUESTLAW@GMAIL.COM",
                            NormalizedUserName = "GUESTLAW@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPz5UK9M38KrJxnZv3bAZRExG24NUIfkU38FashG4AAgYrsAqTnyIxuphLiQnFXTKw==",
                            PhoneNumberConfirmed = false,
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80",
                            RoleName = "Guest",
                            SecurityStamp = "f204da46-df95-4b65-9e3f-f69ba5be939c",
                            TwoFactorEnabled = false,
                            UserName = "guestlaw@gmail.com"
                        },
                        new
                        {
                            Id = "fab5ec6b-e9ef-4b3b-88bd-5083613ce9bd",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "80e343f9-98a0-41b0-829c-f9370878795a",
                            Email = "guestbusiness@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Business",
                            FirstName = "Guest",
                            LastName = "Business",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUESTBUSINESS@GMAIL.COM",
                            NormalizedUserName = "GUESTBUSINESS@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHXHeBDZUCdKU24pseUsLxk+CorWLw1o/pHL0imJimrRTmCTjIJjKQfD4M6XZQio0g==",
                            PhoneNumberConfirmed = false,
                            RoleId = "a304a3dc-4303-4c9d-988b-bb2bcd64ea80",
                            RoleName = "Guest",
                            SecurityStamp = "a1fa6cba-9219-4af9-b400-2c49216c94d6",
                            TwoFactorEnabled = false,
                            UserName = "guestbusiness@gmail.com"
                        },
                        new
                        {
                            Id = "caa72819-738e-4c1b-a03a-81687c2eb101",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20984d7d-169d-4806-9585-8f41d144ac0a",
                            Email = "manager@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Information Technology",
                            FirstName = "Manager",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@GMAIL.COM",
                            NormalizedUserName = "MANAGER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKLoNJvHMcOtDHmZvbEPHnaRkfnOymVbEjmhSt2UOUS/vzFMUI7L876+zeWSb+zWrA==",
                            PhoneNumberConfirmed = false,
                            RoleId = "3bc43976-b36a-47c6-a7d3-02c3c8a0e7ca",
                            RoleName = "Manager",
                            SecurityStamp = "4e4c844e-0e88-4c6b-85e5-fab43d146cea",
                            TwoFactorEnabled = false,
                            UserName = "manager@gmail.com"
                        },
                        new
                        {
                            Id = "ab45742a-b3e6-422a-a3c3-16fb834b83b6",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "85bc3155-2968-4237-9526-8c72310c14c0",
                            Email = "coordinatorit@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Information Technology",
                            FirstName = "Coordinator",
                            LastName = "IT",
                            LockoutEnabled = false,
                            NormalizedEmail = "COORDINATORIT@GMAIL.COM",
                            NormalizedUserName = "COORDINATORIT@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELt1CUcIezc6VjzpFSkW6XHnEnDnsfoxXfcjZoAKFSgNgSK6mu4rJ45U19EZmS5vcg==",
                            PhoneNumberConfirmed = false,
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a",
                            RoleName = "Coordinator",
                            SecurityStamp = "c92ebb8d-b201-429c-a77d-8a0436dd105b",
                            TwoFactorEnabled = false,
                            UserName = "coordinatorit@gmail.com"
                        },
                        new
                        {
                            Id = "8097b232-4528-420d-9b9f-bd1b003f7510",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a4c481b-6391-4d81-9607-0c055c1252b4",
                            Email = "coordinatormarketing@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Marketing",
                            FirstName = "Coordinator",
                            LastName = "Marketing",
                            LockoutEnabled = false,
                            NormalizedEmail = "COORDINATORMARKETING@GMAIL.COM",
                            NormalizedUserName = "COORDINATORMARKETING@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEJSJ35OyiPvn5ysAvE6wWfbjaGPyIxZZl4n+H8l9oFejtQVLHbXwLvl4U8UtuWKzQ==",
                            PhoneNumberConfirmed = false,
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a",
                            RoleName = "Coordinator",
                            SecurityStamp = "9139af86-577d-42c2-b3a3-b8b2dbe3d843",
                            TwoFactorEnabled = false,
                            UserName = "coordinatormarketing@gmail.com"
                        },
                        new
                        {
                            Id = "efc7aa07-ee29-49c2-b61b-2dbda36768d4",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e95f44a-fc1b-4af2-a20e-5b95561d7eef",
                            Email = "coordinatorgraphic@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Graphic Design",
                            FirstName = "Coordinator",
                            LastName = "Graphic",
                            LockoutEnabled = false,
                            NormalizedEmail = "COORDINATORGRAPHIC@GMAIL.COM",
                            NormalizedUserName = "COORDINATORGRAPHIC@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIqNPCl4C1AVAVx9t7KDGBUMIHx9HDxBPmmvqnIkbtpPSDCFb5FeifKLJjsHLzatZg==",
                            PhoneNumberConfirmed = false,
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a",
                            RoleName = "Coordinator",
                            SecurityStamp = "d6c49b6e-fed2-4710-bdb0-cdfe1c520538",
                            TwoFactorEnabled = false,
                            UserName = "coordinatorgraphic@gmail.com"
                        },
                        new
                        {
                            Id = "ccf5d783-983a-48dc-9c9a-2f5978fcccd7",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34a29d4a-5228-4fd8-98be-66e80748f492",
                            Email = "coordinatorlaw@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Law",
                            FirstName = "Coordinator",
                            LastName = "Law",
                            LockoutEnabled = false,
                            NormalizedEmail = "COORDINATORLAW@GMAIL.COM",
                            NormalizedUserName = "COORDINATORLAW@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEK5KCMe0k82XoHYtPCNfdIqkLXmbPno86jhHDQ3qFCa+CIDIkyhT1+NzCx2sn/9ebg==",
                            PhoneNumberConfirmed = false,
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a",
                            RoleName = "Coordinator",
                            SecurityStamp = "fc611e53-abaa-4431-9133-b146c61fd0ec",
                            TwoFactorEnabled = false,
                            UserName = "coordinatorlaw@gmail.com"
                        },
                        new
                        {
                            Id = "2fe187a1-f52c-4c43-9c51-68ded879dd37",
                            AcademicYear = "2024-2025",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "44fe629e-4d46-48ba-83cf-312b08ed4d41",
                            Email = "coordinatorbusiness@gmail.com",
                            EmailConfirmed = true,
                            FacultyName = "Business",
                            FirstName = "Coordinator",
                            LastName = "Business",
                            LockoutEnabled = false,
                            NormalizedEmail = "COORDINATORBUSINESS@GMAIL.COM",
                            NormalizedUserName = "COORDINATORBUSINESS@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDftHRdWKjIWyWgf0FPo3WJ6MCucogJ6ALv60UV70QZlLRj0FZvV2lH7M6tTh86X8Q==",
                            PhoneNumberConfirmed = false,
                            RoleId = "aef5cdcb-b7e6-4c41-8c83-4eaad52a245a",
                            RoleName = "Coordinator",
                            SecurityStamp = "4748e191-a728-4968-9b3e-bdbac3e9fd96",
                            TwoFactorEnabled = false,
                            UserName = "coordinatorbusiness@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ScholarHUB.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ScholarHUB.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScholarHUB.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ScholarHUB.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScholarHUB.Models.Article", b =>
                {
                    b.HasOne("ScholarHUB.Models.UserProfile", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId");

                    b.HasOne("ScholarHUB.Models.Faculty", "Faculty")
                        .WithMany("Articles")
                        .HasForeignKey("FacultyId");

                    b.Navigation("Author");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("ScholarHUB.Models.Comment", b =>
                {
                    b.HasOne("ScholarHUB.Models.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId");

                    b.HasOne("ScholarHUB.Models.UserProfile", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Article");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ScholarHUB.Models.UserProfile", b =>
                {
                    b.HasOne("ScholarHUB.Models.Faculty", "Faculty")
                        .WithMany("UserProfiles")
                        .HasForeignKey("FacultyId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Faculty");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ScholarHUB.Models.Article", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ScholarHUB.Models.Faculty", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("ScholarHUB.Models.UserProfile", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
